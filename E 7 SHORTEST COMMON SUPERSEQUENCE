class Solution {
public:
    string shortestCommonSupersequence(string text1, string text2) {
        int n = text1.length();
        int m = text2.length();
        vector<vector<int>> dp(n+1, vector<int>(m+1,0));
        
        // Handling BASE CASE...
        for(int j=0; j<=m; j++) dp[0][j] = 0;
        for(int i=0; i<=n; i++) dp[i][0] = 0;

        for(int index1=1; index1<=n; index1++)
        {
            for(int index2=1; index2<=m; index2++)
            {
                if(text1[index1-1] == text2[index2-1]) dp[index1][index2] = 1 + dp[index1-1][index2-1];
                else dp[index1][index2] = 0 + max(dp[index1-1][index2], dp[index1][index2-1]);
            }
        }

        int r = n;
        int s = m;
        string ans = "";

        while(r>0 && s>0)
        {
            if(text1[r-1] == text2[s-1])
            {
                ans += text1[r-1];
                r--;
                s--;
            }

            else if(dp[r-1][s]>dp[r][s-1])
            {
                ans+=text1[r-1];
                r = r-1;
            }

            else
            {
                ans += text2[s-1];
                s = s-1;
            }
        }

        while(r>0)
        {
            ans+=text1[r-1];
            r--;
        } 

        while(s>0)
        {
            ans += text2[s-1];
            s--;
        }

        reverse(ans.begin(), ans.end());
        return ans;
    }
};
