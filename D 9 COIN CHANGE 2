class Solution {
public:

    int function(int index, int amount, vector<int> &coins, vector<vector<int>> &dp)
    {
        if(index == 0)
        {
            if(amount%coins[0] == 0) return 1;
            else return 0;
        }

        if(dp[index][amount]!=-1) return dp[index][amount];

        int nT = function(index-1, amount, coins, dp);
        int T = 0;
        if(coins[index]<=amount)
        {
            T =  function(index, amount-coins[index], coins, dp);
        }

        return dp[index][amount] = (T + nT);
    }

    int change(int amount, vector<int>& coins) {
        int n = coins.size();
        vector<vector<int>> dp(n, vector<int>(amount+1, -1));
        int ans = function(n-1, amount, coins, dp);
        return ans;
    }
};
