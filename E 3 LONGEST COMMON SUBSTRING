int longestCommonSubstring(string text1, string text2)
{
  int n = text1.length();
  int m = text2.length();

  vector<vector<int>> dp(n+1, vector<int>(m+1, 0));

  // Base Case.. Exhaustion

  for(int j=0; j<=m; j++) dp[0][j] = 0;
  for(int i=0; i<=n; i++) dp[i][0] = 0;

  int maxi = -1e8;

  for(int index1=1; index1<=n; index1++)
  {
    for(int index2=1; index2<=m; index2++)
    {
      if(text1[index1-1] == text2[index2-1])
      {
        dp[index1][index2] = 1+dp[index1-1][index2-1];
        maxi = max(maxi, dp[index1][index2]);
      }

      // else dp[index1][index2] = max( dp[index1-1][index2], dp[index1][index2-1] );
      else dp[index1][index2] = 0;
    }
  }

  return maxi;
  
}
