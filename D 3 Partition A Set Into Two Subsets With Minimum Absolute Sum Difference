class Solution{

  public:
	int minDifference(int nums[], int n)  { 
	    
	    int sum = 0;
        for(int i=0; i<n; i++)
        {
            sum = sum + nums[i];
        }
        int target = sum;
        
        vector<vector<bool>> dp(n, vector<bool>(target+1, 0));

        for(int i=0; i<n; i++) dp[i][0] = 1;
        if(nums[0]<=target) dp[0][nums[0]] = 1;

        for(int ind=1; ind<n; ind++)
        {
            for(int tar=1; tar<=target; tar++)
            {
                bool notTake = dp[ind-1][tar];
                bool take = false;
                if (nums[ind] <= tar) {
                    take = dp[ind-1][tar-nums[ind]];
                }

                dp[ind][tar] = take||notTake;
            }
        }

        int mini = 1e8;
        for(int i=0; i<=target; i++)
        {
            if(dp[n-1][i] == true)
            {
                int sum1 = i;
                int sum2 = sum-sum1;
                mini = min(mini, abs(sum2-sum1));
            }
        }


        return mini;
	} 
};
