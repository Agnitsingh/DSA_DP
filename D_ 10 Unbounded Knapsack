class Solution{
public:
    int knapSack(int n, int W, int val[], int wt[])
    {
        vector<vector<int>> dp(n, vector<int>(W+1, 0));
        
        // BASE CASE...
        
        for(int i=0; i<=W; i++)
        {
            dp[0][i] = (i/wt[0])*val[0];
        }
        
        for(int index=1; index<n; index++)
        {
            for(int weight=0; weight<=W; weight++)
            {
                int notTake = dp[index-1][weight];
                int Take = -1e8;
                if(wt[index]<=weight)
                {
                    Take = val[index] + dp[index][weight-wt[index]];
                }
                dp[index][weight] = max(notTake, Take);
            }
        }
        return dp[n-1][W];
    }
};
